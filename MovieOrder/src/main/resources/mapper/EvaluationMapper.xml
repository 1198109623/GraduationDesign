<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hand.movie.dao.EvaluationMapper">
  <resultMap id="BaseResultMap" type="com.hand.movie.bean.Evaluation">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="movie_id" jdbcType="INTEGER" property="movieId" />
    <result column="evaluation_content" jdbcType="VARCHAR" property="evaluationContent" />
  </resultMap>
  <resultMap id="WithUserAndMovieResultMap" type="com.hand.movie.bean.Evaluation">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="movie_id" jdbcType="INTEGER" property="movieId" />
    <result column="evaluation_content" jdbcType="VARCHAR" property="evaluationContent" />
    <!-- 指定联合查询出的字段的封装 -->
    <association property="User" javaType="com.hand.movie.bean.User">
      <id column="id" jdbcType="INTEGER" property="id" />
      <result column="username" jdbcType="VARCHAR" property="username" />
      <result column="password" jdbcType="VARCHAR" property="password" />
      <result column="mobile" jdbcType="INTEGER" property="mobile" />
      <result column="role" jdbcType="VARCHAR" property="role" />
    </association>
    <association property="movie" javaType="com.hand.movie.bean.Movie">
      <id column="id" jdbcType="INTEGER" property="id" />
      <result column="movie_name" jdbcType="VARCHAR" property="movieName" />
      <result column="director" jdbcType="VARCHAR" property="director" />
      <result column="stars" jdbcType="VARCHAR" property="stars" />
      <result column="type" jdbcType="VARCHAR" property="type" />
      <result column="language" jdbcType="VARCHAR" property="language" />
      <result column="time" jdbcType="VARCHAR" property="time" />
      <result column="introduction" jdbcType="VARCHAR" property="introduction" />
      <result column="price" jdbcType="DOUBLE" property="price" />
      <!--<result column="picture" jdbcType="LONGVARBINARY" property="picture" />-->
      <result column="show_time" jdbcType="TIMESTAMP" property="showTime" />

    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, movie_id, evaluation_content
  </sql>
  <sql id="WithUserAndMovie_Column_List">
    e.id, e.user_id, e.movie_id, e.evaluation_content,
    u.username,
    m.movie_name
  </sql>
  <!--List<Evaluation> selectByExampleWithUserAndMovie(EvaluationExample example);

    Evaluation selectByPrimaryKeyWithUserAndMovie(Integer id);-->
  <select id="selectByExampleWithUserAndMovie" parameterType="com.hand.movie.bean.EvaluationExample" resultMap="WithUserAndMovieResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="WithUserAndMovie_Column_List" />
    from `evaluation` e,`user` u,`movie` m
    WHERE e.`user_id` = u.`id`AND e.`movie_id` = m.`id`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKeyWithUserAndMovie" parameterType="java.lang.Integer" resultMap="WithUserAndMovieResultMap">
    select
    <include refid="WithUserAndMovie_Column_List" />
    from `evaluation` e,`user` u,`movie` m
    where e.`id` = #{id,jdbcType=INTEGER} AND e.`user_id` = u.`id`AND e.`movie_id` = m.`id`
  </select>



  <select id="selectByExample" parameterType="com.hand.movie.bean.EvaluationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from evaluation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from evaluation
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from evaluation
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hand.movie.bean.EvaluationExample">
    delete from evaluation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hand.movie.bean.Evaluation">
    insert into evaluation (id, user_id, movie_id, 
      evaluation_content)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{movieId,jdbcType=INTEGER}, 
      #{evaluationContent,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hand.movie.bean.Evaluation">
    insert into evaluation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="movieId != null">
        movie_id,
      </if>
      <if test="evaluationContent != null">
        evaluation_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="movieId != null">
        #{movieId,jdbcType=INTEGER},
      </if>
      <if test="evaluationContent != null">
        #{evaluationContent,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hand.movie.bean.EvaluationExample" resultType="java.lang.Long">
    select count(*) from evaluation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update evaluation
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.movieId != null">
        movie_id = #{record.movieId,jdbcType=INTEGER},
      </if>
      <if test="record.evaluationContent != null">
        evaluation_content = #{record.evaluationContent,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update evaluation
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      movie_id = #{record.movieId,jdbcType=INTEGER},
      evaluation_content = #{record.evaluationContent,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hand.movie.bean.Evaluation">
    update evaluation
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="movieId != null">
        movie_id = #{movieId,jdbcType=INTEGER},
      </if>
      <if test="evaluationContent != null">
        evaluation_content = #{evaluationContent,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hand.movie.bean.Evaluation">
    update evaluation
    set user_id = #{userId,jdbcType=INTEGER},
      movie_id = #{movieId,jdbcType=INTEGER},
      evaluation_content = #{evaluationContent,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>